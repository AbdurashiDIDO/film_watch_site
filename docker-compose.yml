version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: django_web
    # '/start' is the shell script used to run the service
    command: /start
    # this volume is used to map the files and folders on the host to the container
    # so if we change code on the host, code in the docker container will also be changed
    ports:
      - "8000:8000"
    env_file:
      - .env

    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - elasticsearch
      - rabbitmq
      - db

  db:
    image: postgres:15-alpine
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=1
      - POSTGRES_DB=film_watch_site

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - esdata:/usr/share/elasticsearch/data

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - 5672:5672
      - 15672:15672

  celery_worker:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: celery_worker
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - db

  celery_beat:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: celery_beat
    command: /start-celerybeat
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - db

  flower:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
    image: django_celery_example_celery_flower
    command: /start-flower
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - 5557:5555
    depends_on:
      - db

  nginx:
    build: compose/nginx
    ports:
      - "2022:80"
    depends_on:
      - web
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media

volumes:
  esdata:
  postgres_data:
  static_volume:
  media_volume:

